"use strict";
exports.__esModule = true;
exports.referenceSchema = exports.issueSchema = exports.articleSchema = void 0;
var astro_content_1 = require("astro:content");
var tags = astro_content_1.z.array(astro_content_1.z.string()).optional();
exports.articleSchema = astro_content_1.z
    .object({
    path: astro_content_1.z.string().optional(),
    author: astro_content_1.z.string().optional(),
    pubDatetime: astro_content_1.z.date(),
    title: astro_content_1.z.string(),
    version: astro_content_1.z.string().optional(),
    issue: astro_content_1.z.string().optional(),
    subtitle: astro_content_1.z.string().optional(),
    sectionNumber: astro_content_1.z.string().optional(),
    featured: astro_content_1.z.boolean().optional(),
    draft: astro_content_1.z.boolean().optional(),
    tags: tags,
    bibliography: astro_content_1.z.string().optional(),
    references: astro_content_1.z
        .object({
        tags: astro_content_1.z.array(astro_content_1.z.string())
    })
        .optional(),
    description: astro_content_1.z.string()
})
    .strict();
exports.issueSchema = astro_content_1.z
    .object({
    pubDatetime: astro_content_1.z.date(),
    color: astro_content_1.z.string(),
    version: astro_content_1.z.string().optional(),
    coverImage: astro_content_1.z.string(),
    coverImageCaption: astro_content_1.z.string().optional(),
    coverImageAlt: astro_content_1.z.string(),
    title: astro_content_1.z.string(),
    subtitle: astro_content_1.z.string().optional(),
    subtitle_1: astro_content_1.z.string().optional(),
    subtitle_2: astro_content_1.z.string().optional(),
    draft: astro_content_1.z.boolean().optional(),
    articles: astro_content_1.z.array(astro_content_1.z.string()),
    tags: tags,
    bibliographyTopics: astro_content_1.z
        .array(astro_content_1.z.object({
        title: astro_content_1.z.string(),
        tag: astro_content_1.z.string()
    }))
        .optional(),
    description: astro_content_1.z.string()
})
    .strict();
exports.referenceSchema = astro_content_1.z
    .object({
    tags: tags,
    bibTex: astro_content_1.z.string(),
    rendered: astro_content_1.z.object({
        bibliography: astro_content_1.z.string(),
        citation: astro_content_1.z.string()
    }),
    cslItem: astro_content_1.z.object({
        type: astro_content_1.z["enum"]([
            "article",
            "article-journal",
            "article-magazine",
            "article-newspaper",
            "bill",
            "book",
            "broadcast",
            "chapter",
            "classic",
            "collection",
            "dataset",
            "document",
            "entry",
            "entry-dictionary",
            "entry-encyclopedia",
            "event",
            "figure",
            "graphic",
            "hearing",
            "interview",
            "legal_case",
            "legislation",
            "manuscript",
            "map",
            "motion_picture",
            "musical_score",
            "pamphlet",
            "paper-conference",
            "patent",
            "performance",
            "periodical",
            "personal_communication",
            "post",
            "post-weblog",
            "regulation",
            "report",
            "review",
            "review-book",
            "software",
            "song",
            "speech",
            "standard",
            "thesis",
            "treaty",
            "webpage",
        ]),
        id: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]),
        "citation-key": astro_content_1.z.string().optional(),
        categories: astro_content_1.z.array(astro_content_1.z.string()).optional(),
        language: astro_content_1.z.string().optional(),
        journalAbbreviation: astro_content_1.z.string().optional(),
        shortTitle: astro_content_1.z.string().optional(),
        author: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        chair: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "collection-editor": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        compiler: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        composer: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "container-author": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        contributor: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        curator: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        director: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        editor: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "editorial-director": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "executive-producer": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        guest: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        host: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        interviewer: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        illustrator: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        narrator: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        organizer: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "original-author": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        performer: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        producer: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        recipient: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "reviewed-author": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "script-writer": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        "series-creator": astro_content_1.z.array(astro_content_1.z.any()).optional(),
        translator: astro_content_1.z.array(astro_content_1.z.any()).optional(),
        accessed: astro_content_1.z.any().optional(),
        "available-date": astro_content_1.z.any().optional(),
        "event-date": astro_content_1.z.any().optional(),
        issued: astro_content_1.z.any().optional(),
        "original-date": astro_content_1.z.any().optional(),
        submitted: astro_content_1.z.any().optional(),
        abstract: astro_content_1.z.string().optional(),
        annote: astro_content_1.z.string().optional(),
        archive: astro_content_1.z.string().optional(),
        archive_collection: astro_content_1.z.string().optional(),
        archive_location: astro_content_1.z.string().optional(),
        "archive-place": astro_content_1.z.string().optional(),
        authority: astro_content_1.z.string().optional(),
        "call-number": astro_content_1.z.string().optional(),
        "chapter-number": astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "citation-number": astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "citation-label": astro_content_1.z.string().optional(),
        "collection-number": astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "collection-title": astro_content_1.z.string().optional(),
        "container-title": astro_content_1.z.string().optional(),
        "container-title-short": astro_content_1.z.string().optional(),
        dimensions: astro_content_1.z.string().optional(),
        division: astro_content_1.z.string().optional(),
        DOI: astro_content_1.z.string().optional(),
        edition: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        event: astro_content_1.z
            .string()
            .describe("[Deprecated - use 'event-title' instead. Will be removed in 1.1]")
            .optional(),
        "event-title": astro_content_1.z.string().optional(),
        "event-place": astro_content_1.z.string().optional(),
        "first-reference-note-number": astro_content_1.z
            .union([astro_content_1.z.string(), astro_content_1.z.number()])
            .optional(),
        genre: astro_content_1.z.string().optional(),
        ISBN: astro_content_1.z.string().optional(),
        ISSN: astro_content_1.z.string().optional(),
        issue: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        jurisdiction: astro_content_1.z.string().optional(),
        keyword: astro_content_1.z.string().optional(),
        locator: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        medium: astro_content_1.z.string().optional(),
        note: astro_content_1.z.string().optional(),
        number: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "number-of-pages": astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "number-of-volumes": astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "original-publisher": astro_content_1.z.string().optional(),
        "original-publisher-place": astro_content_1.z.string().optional(),
        "original-title": astro_content_1.z.string().optional(),
        page: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "page-first": astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        part: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "part-title": astro_content_1.z.string().optional(),
        PMCID: astro_content_1.z.string().optional(),
        PMID: astro_content_1.z.string().optional(),
        printing: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        publisher: astro_content_1.z.string().optional(),
        "publisher-place": astro_content_1.z.string().optional(),
        references: astro_content_1.z.string().optional(),
        "reviewed-genre": astro_content_1.z.string().optional(),
        "reviewed-title": astro_content_1.z.string().optional(),
        scale: astro_content_1.z.string().optional(),
        section: astro_content_1.z.string().optional(),
        source: astro_content_1.z.string().optional(),
        status: astro_content_1.z.string().optional(),
        supplement: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        title: astro_content_1.z.string().optional(),
        "title-short": astro_content_1.z.string().optional(),
        URL: astro_content_1.z.string().optional(),
        version: astro_content_1.z.string().optional(),
        volume: astro_content_1.z.union([astro_content_1.z.string(), astro_content_1.z.number()]).optional(),
        "volume-title": astro_content_1.z.string().optional(),
        "volume-title-short": astro_content_1.z.string().optional(),
        "year-suffix": astro_content_1.z.string().optional(),
        custom: astro_content_1.z
            .object({})
            .catchall(astro_content_1.z.any())
            .describe("Used to store additional information that does not have a designated CSL JSON field. The custom field is preferred over the note field for storing custom data, particularly for storing key-value pairs, as the note field is used for user annotations in annotated bibliography styles.")
            .optional()
    })
})
    .strict();
