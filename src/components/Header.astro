---
import { SITE } from "@config"

export interface Props {
  activeNav?: "issues" | "tags" | "references" | "about" | "search"
}

const { activeNav } = Astro.props
---

<header>
  <a class="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <a href="/" class="logo">
      <object
        data="/assets/jerrobs.svg"
        class="jerrobs"
        height="28"
        width="138"
        alt="[logo] J. Err. Obs"
        type="image/svg+xml"
      >
      </object>
    </a>

    <nav id="nav-menu">
      <!-- <button
        class="hamburger-menu focus-outline"
        aria-label="Open Menu"
        aria-expanded="false"
        aria-controls="menu-items"
      >
        <div class="icon-container flex">
          <div id="first-line"></div>
          <div id="second-line"></div>
          <div id="third-line"></div>
        </div>
      </button> -->
      <ul id="menu-items" class="body-md">
        <li>
          <a href="/issues" class={activeNav === "issues" ? "active" : ""}>
            Issues
          </a>
        </li>
        <!-- <li>
          <a href="/articles" class={activeNav === "articles" ? "active" : ""}>
            Articles
          </a>
        </li> -->

        <li>
          <a
            href="/references"
            class={activeNav === "references" ? "active" : ""}
          >
            References
          </a>
        </li>
        <li>
          <a href="/about" class={activeNav === "about" ? "active" : ""}>
            About
          </a>
        </li>
        <!-- <li>
          <LinkButton
            href="/search"
            className={`focus-outline p-3 sm:p-1 ${
              activeNav === "search" ? "active" : ""
            }`}
            ariaLabel="search"
            title="Search"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="scale-125 sm:scale-100"
              ><path
                d="M19.023 16.977a35.13 35.13 0 0 1-1.367-1.384c-.372-.378-.596-.653-.596-.653l-2.8-1.337A6.962 6.962 0 0 0 16 9c0-3.859-3.14-7-7-7S2 5.141 2 9s3.14 7 7 7c1.763 0 3.37-.66 4.603-1.739l1.337 2.8s.275.224.653.596c.387.363.896.854 1.384 1.367l1.358 1.392.604.646 2.121-2.121-.646-.604c-.379-.372-.885-.866-1.391-1.36zM9 14c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z"
              ></path>
            </svg>
          </LinkButton>
        </li> -->
        <li>
          {
            SITE.lightAndDarkMode && (
              <button
                id="theme-btn"
                class="focus-outline"
                title="Toggles light & dark"
                aria-label="auto"
                aria-live="polite"
              >
                <svg xmlns="http://www.w3.org/2000/svg" id="moon-svg">
                  <path
                    xmlns="http://www.w3.org/2000/svg"
                    d="M21.7519 15.0019C20.597 15.4839 19.3296 15.75 18 15.75C12.6152 15.75 8.25 11.3848 8.25 5.99999C8.25 4.67039 8.51614 3.40296 8.99806 2.24805C5.47566 3.71785 3 7.19481 3 11.25C3 16.6348 7.36522 21 12.75 21C16.8052 21 20.2821 18.5243 21.7519 15.0019Z"
                    stroke="#0F172A"
                    stroke-width="1.5"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
                <svg xmlns="http://www.w3.org/2000/svg" id="sun-svg">
                  <path
                    xmlns="http://www.w3.org/2000/svg"
                    d="M12 3V5.25M18.364 5.63604L16.773 7.22703M21 12H18.75M18.364 18.364L16.773 16.773M12 18.75V21M7.22703 16.773L5.63604 18.364M5.25 12H3M7.22703 7.22703L5.63604 5.63604M15.75 12C15.75 14.0711 14.0711 15.75 12 15.75C9.92893 15.75 8.25 14.0711 8.25 12C8.25 9.92893 9.92893 8.25 12 8.25C14.0711 8.25 15.75 9.92893 15.75 12Z"
                    stroke="#0F172A"
                    stroke-width="1.5"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </button>
            )
          }
        </li>
      </ul>
    </nav>
  </div>
</header>

<script>
  // Toggle menu
  const menuBtn = document.querySelector(".hamburger-menu")
  const menuItems = document.querySelector("#menu-items")?.classList

  const iconContainer = document.querySelector(".icon-container")?.classList
  const firstLine = document.querySelector("#first-line")?.classList
  const secondLine = document.querySelector("#second-line ")?.classList
  const thirdLine = document.querySelector("#third-line")?.classList

  menuBtn?.addEventListener("click", function () {
    const menuExpanded = menuBtn?.getAttribute("aria-expanded")
    if (menuExpanded === "false") {
      menuBtn?.setAttribute("aria-expanded", "true")
      menuBtn?.setAttribute("aria-label", "Close Menu")
      menuItems?.remove("display-none")

      // icon animation
      iconContainer?.remove("flex")
      iconContainer?.add("relative")
      firstLine?.add("rotate-45", "absolute", "bottom-1/2")
      thirdLine?.add("display-none")
      secondLine?.add("!w-full", "-rotate-45", "absolute", "bottom-1/2")
    } else {
      menuBtn?.setAttribute("aria-expanded", "false")
      menuBtn?.setAttribute("aria-label", "Open Menu")
      menuItems?.add("display-none")

      // icon animation
      iconContainer?.add("flex")
      iconContainer?.remove("relative")
      firstLine?.remove("rotate-45", "absolute", "bottom-1/2")
      thirdLine?.remove("display-none")
      secondLine?.remove("!w-full", "-rotate-45", "absolute", "bottom-1/2")
    }
  })
</script>

<style lang="styl">
  button {
    height: 28px;
    width: 28px;
    padding: 0;
  }
  .nav-container {
    display: flex;
    // flex-direction: row;
    height: 3rem;
    // background-color: red;
    padding-top: 1rem;
    position relative
  }
  .nav-container:after {
    content: " "
    display: block;
    position absolute
    bottom 0
    background-color var(--color-foreground)
    width 100%
    height: .25rem;
    }
  .logo {
    flex-grow: 1;
  }

  img.jerrobs {
    height: 1rem;
    margin-top: 5px;
    }
  #menu-items {
    // flex-grow: 0;
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
  }
  .menu-item li {
    // padding: 0 1rem;
  }

  a.skip-to-content {
    left: -999px;
    position: absolute;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
    z-index: -999;
  }
  a.skip-to-content:focus,
  a.skip-to-content:active {
    color: #fff;
    background-color: #000;
    left: auto;
    top: auto;
    width: 30%;
    height: auto;
    overflow: auto;
    margin: 10px 35%;
    padding: 5px;
    border-radius: 15px;
    border: 4px solid yellow;
    text-align: center;
    font-size: 1.2em;
    z-index: 999;
  }
  img > path{ fill: red }

  .jerrobs   {
    // font-size: 8rem;
    overflow: hidden;
    
    
  }

  .jerrobs > path  {
    fill: red;}


  #theme-btn svg {
    height: 1rem;
    width: 1rem;
    }
</style>
